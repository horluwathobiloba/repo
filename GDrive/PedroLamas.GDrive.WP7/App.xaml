<Application x:Class="PedroLamas.GDrive.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:cimbalinoConverters="clr-namespace:Cimbalino.Phone.Toolkit.Converters;assembly=Cimbalino.Phone.Toolkit"
             xmlns:cimbalinoSystemControls="clr-namespace:System.Windows.Controls;assembly=Cimbalino.Phone.Toolkit"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:localViewModel="clr-namespace:PedroLamas.GDrive.ViewModel"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:phone="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone"
             xmlns:shell="clr-namespace:Microsoft.Phone.Shell;assembly=Microsoft.Phone"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:toolkit="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit"
             xmlns:toolkitPrimitives="clr-namespace:Microsoft.Phone.Controls.Primitives;assembly=Microsoft.Phone.Controls.Toolkit"
             mc:Ignorable="d">

    <Application.Resources>
        <sys:String x:Key="ApplicationTitle">GDRIVE</sys:String>

        <localViewModel:ViewModelLocator x:Key="Locator" d:IsDataSource="True" />

        <cimbalinoConverters:NegativeBooleanConverter x:Key="NegativeBooleanConverter" />
        <cimbalinoConverters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <cimbalinoConverters:BooleanToVisibilityConverter x:Key="NegativeBooleanToVisibilityConverter" InvertValue="True" />

        <Color x:Key="ForegroundColor">#404040</Color>
        <Color x:Key="SubtleForegroundColor">#6C6C6C</Color>
        <Color x:Key="BackgroundColor">#FFFFFF</Color>
        <Color x:Key="BoxForegroundColor">#404040</Color>
        <Color x:Key="BoxBorderColor">#1BA1E2</Color>
        <Color x:Key="BoxBackgroundColor">#FFFFFF</Color>
        <Color x:Key="Box2ForegroundColor">#FFFFFF</Color>
        <Color x:Key="Box2BorderColor">#19719C</Color>
        <Color x:Key="Box2BackgroundColor">#1BA1E2</Color>

        <SolidColorBrush x:Key="ForegroundBrush" Color="{StaticResource ForegroundColor}" />
        <SolidColorBrush x:Key="SubtleForegroundBrush" Color="{StaticResource SubtleForegroundColor}" />
        <SolidColorBrush x:Key="BackgroundBrush" Color="{StaticResource BackgroundColor}" />
        <SolidColorBrush x:Key="BoxForegroundBrush" Color="{StaticResource BoxForegroundColor}" />
        <SolidColorBrush x:Key="BoxBorderBrush" Color="{StaticResource BoxBorderColor}" />
        <SolidColorBrush x:Key="BoxBackgroundBrush" Color="{StaticResource BoxBackgroundColor}" />
        <SolidColorBrush x:Key="Box2ForegroundBrush" Color="{StaticResource Box2ForegroundColor}" />
        <SolidColorBrush x:Key="Box2BorderBrush" Color="{StaticResource Box2BorderColor}" />
        <SolidColorBrush x:Key="Box2BackgroundBrush" Color="{StaticResource Box2BackgroundColor}" />

        <Style x:Key="TextTitleStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        </Style>

        <Style x:Key="TextNormalStyle"
               BasedOn="{StaticResource PhoneTextNormalStyle}"
               TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        </Style>

        <Style x:Key="TextTitle1Style"
               BasedOn="{StaticResource PhoneTextTitle1Style}"
               TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        </Style>

        <Style x:Key="TextTitle2Style"
               BasedOn="{StaticResource PhoneTextTitle2Style}"
               TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        </Style>

        <Style x:Key="TextTitle3Style"
               BasedOn="{StaticResource PhoneTextTitle3Style}"
               TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        </Style>

        <Style x:Key="TextSubtleStyle"
               BasedOn="{StaticResource PhoneTextSubtleStyle}"
               TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource SubtleForegroundBrush}" />
        </Style>

        <Style x:Key="TextExtraLargeStyle"
               BasedOn="{StaticResource PhoneTextExtraLargeStyle}"
               TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource SubtleForegroundBrush}" />
        </Style>

        <Style TargetType="Button">
            <Setter Property="Foreground" Value="{StaticResource BoxForegroundBrush}" />
            <Setter Property="BorderBrush" Value="{StaticResource BoxBorderBrush}" />
            <Setter Property="Background" Value="{StaticResource BoxBackgroundBrush}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Pressed" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentContainer" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonBackground" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonBackground" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Transparent" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="ButtonBackground"
                                    Margin="{StaticResource PhoneTouchTargetOverhang}"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="0">
                                <ContentControl x:Name="ContentContainer"
                                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                Content="{TemplateBinding Content}"
                                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                                Foreground="{TemplateBinding Foreground}"
                                                Padding="{TemplateBinding Padding}" />
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="Type2ButtonStyle" TargetType="Button">
            <Setter Property="Foreground" Value="{StaticResource Box2ForegroundBrush}" />
            <Setter Property="BorderBrush" Value="{StaticResource Box2BorderBrush}" />
            <Setter Property="Background" Value="{StaticResource Box2BackgroundBrush}" />
        </Style>

        <Style x:Key="PhoneApplicationPageStyle" TargetType="phone:PhoneApplicationPage">
            <Setter Property="toolkit:TiltEffect.IsTiltEnabled" Value="True" />
            <Setter Property="toolkit:TransitionService.NavigationInTransition">
                <Setter.Value>
                    <toolkit:NavigationInTransition>
                        <toolkit:NavigationInTransition.Backward>
                            <toolkit:SlideTransition Mode="SlideUpFadeIn" />
                        </toolkit:NavigationInTransition.Backward>
                        <toolkit:NavigationInTransition.Forward>
                            <toolkit:SlideTransition Mode="SlideUpFadeIn" />
                        </toolkit:NavigationInTransition.Forward>
                    </toolkit:NavigationInTransition>
                </Setter.Value>
            </Setter>
            <Setter Property="toolkit:TransitionService.NavigationOutTransition">
                <Setter.Value>
                    <toolkit:NavigationOutTransition>
                        <toolkit:NavigationOutTransition.Backward>
                            <toolkit:SlideTransition Mode="SlideDownFadeOut" />
                        </toolkit:NavigationOutTransition.Backward>
                        <toolkit:NavigationOutTransition.Forward>
                            <toolkit:SlideTransition Mode="SlideDownFadeOut" />
                        </toolkit:NavigationOutTransition.Forward>
                    </toolkit:NavigationOutTransition>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="EmptyHyperlinkButtonStyle" TargetType="HyperlinkButton">
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="HyperlinkButton">
                        <ContentPresenter />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="RegularHeaderedContentControlStyle" TargetType="cimbalinoSystemControls:HeaderedContentControl">
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="Margin" Value="0,0,0,12" />
            <Setter Property="HeaderTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock Style="{StaticResource TextExtraLargeStyle}" Text="{Binding}" />
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock Margin="12-4,12,0"
                                   Style="{StaticResource TextSubtleStyle}"
                                   Text="{Binding}"
                                   TextWrapping="Wrap" />
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="LinkedHeaderedContentControlStyle"
               BasedOn="{StaticResource RegularHeaderedContentControlStyle}"
               TargetType="cimbalinoSystemControls:HeaderedContentControl">
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock Margin="12-4,12,0"
                                   Foreground="{StaticResource PhoneAccentBrush}"
                                   Style="{StaticResource TextSubtleStyle}"
                                   Text="{Binding}"
                                   TextWrapping="Wrap" />
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="toolkit:MenuItem">
            <Setter Property="Foreground" Value="{StaticResource PhoneForegroundBrush}" />
        </Style>

        <Style x:Key="StarCheckBoxStyle" TargetType="CheckBox">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Grid Background="{TemplateBinding Background}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneRadioCheckBoxPressedBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentContainer" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Yellow" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                    <VisualState x:Name="Indeterminate" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <Path x:Name="CheckMark"
                                  Width="32"
                                  Height="32"
                                  Margin="{StaticResource PhoneTouchTargetLargeOverhang}"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Center"
                                  Data="F1 M 6.49999,32.3708L 10.5172,20.0063L -1.02645e-005,12.3654L 12.9333,12.3654L 17.0173,6.10352e-005L 21.0987,12.3654L 34.036,12.3654L 23.5183,20.0067L 27.536,32.3708L 17.018,24.7292L 6.49999,32.3708 Z "
                                  Fill="{StaticResource PhoneRadioCheckBoxBrush}"
                                  IsHitTestVisible="False"
                                  Stretch="Fill"
                                  Stroke="{StaticResource PhoneRadioCheckBoxCheckDisabledBrush}"
                                  StrokeThickness="1" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <Style x:Key="MultiselectItemStyle" TargetType="toolkit:MultiselectItem">
            <Style.Setters>
                <Setter Property="Background" Value="{StaticResource PhoneAccentBrush}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="toolkit:MultiselectItem">
                            <Grid MinHeight="52">
                                <Grid.Resources>
                                    <ExponentialEase x:Key="ExponentialEaseIn"
                                                     EasingMode="EaseIn"
                                                     Exponent="8" />
                                    <QuadraticEase x:Key="QuadraticEaseOut" EasingMode="EaseOut" />
                                </Grid.Resources>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="SelectionEnabledStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition x:Name="ClosedToExposed"
                                                              From="Closed"
                                                              GeneratedDuration="0:0:0.30"
                                                              To="Exposed">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OutterHintPanel" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                        <EasingDoubleKeyFrame EasingFunction="{StaticResource QuadraticEaseOut}"
                                                                              KeyTime="0:0:0.0"
                                                                              Value="0.0" />
                                                        <EasingDoubleKeyFrame EasingFunction="{StaticResource QuadraticEaseOut}"
                                                                              KeyTime="0:0:0.30"
                                                                              Value="1.0" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualTransition>
                                            <VisualTransition x:Name="ExposedToClosed"
                                                              From="Exposed"
                                                              GeneratedDuration="0:0:0.30"
                                                              To="Closed">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OutterHintPanel" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                        <EasingDoubleKeyFrame EasingFunction="{StaticResource QuadraticEaseOut}"
                                                                              KeyTime="0:0:0.0"
                                                                              Value="1.0" />
                                                        <EasingDoubleKeyFrame EasingFunction="{StaticResource QuadraticEaseOut}"
                                                                              KeyTime="0:0:0.30"
                                                                              Value="0.0" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualTransition>
                                            <VisualTransition x:Name="ExposedToOpened"
                                                              From="Exposed"
                                                              GeneratedDuration="0:0:0.30"
                                                              To="Opened">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SelectBox" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)">
                                                        <EasingDoubleKeyFrame EasingFunction="{StaticResource ExponentialEaseIn}"
                                                                              KeyTime="0:0:0.0"
                                                                              Value="-58" />
                                                        <EasingDoubleKeyFrame EasingFunction="{StaticResource ExponentialEaseIn}"
                                                                              KeyTime="0:0:0.15"
                                                                              Value="0" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Presenter" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)">
                                                        <EasingDoubleKeyFrame EasingFunction="{StaticResource ExponentialEaseIn}"
                                                                              KeyTime="0:0:0.0"
                                                                              Value="24" />
                                                        <EasingDoubleKeyFrame EasingFunction="{StaticResource ExponentialEaseIn}"
                                                                              KeyTime="0:0:0.15"
                                                                              Value="74" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OutterHintPanel" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                        <EasingDoubleKeyFrame EasingFunction="{StaticResource QuadraticEaseOut}"
                                                                              KeyTime="0:0:0.0"
                                                                              Value="1.0" />
                                                        <EasingDoubleKeyFrame EasingFunction="{StaticResource QuadraticEaseOut}"
                                                                              KeyTime="0:0:0.30"
                                                                              Value="0.0" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectBox" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="Visible" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OutterHintPanel" Storyboard.TargetProperty="(UIElement.IsHitTestVisible)">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="False" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <!--
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="InnerHintPanel" Storyboard.TargetProperty="(UIElement.IsHitTestVisible)">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="False" />
                                                        </ObjectAnimationUsingKeyFrames>
                                                    -->
                                                </Storyboard>
                                            </VisualTransition>
                                            <VisualTransition x:Name="ClosedToOpened"
                                                              From="Closed"
                                                              GeneratedDuration="0:0:0.15"
                                                              To="Opened">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SelectBox" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)">
                                                        <EasingDoubleKeyFrame EasingFunction="{StaticResource ExponentialEaseIn}"
                                                                              KeyTime="0:0:0.0"
                                                                              Value="-58" />
                                                        <EasingDoubleKeyFrame EasingFunction="{StaticResource ExponentialEaseIn}"
                                                                              KeyTime="0:0:0.15"
                                                                              Value="0" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Presenter" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)">
                                                        <EasingDoubleKeyFrame EasingFunction="{StaticResource ExponentialEaseIn}"
                                                                              KeyTime="0:0:0.0"
                                                                              Value="24" />
                                                        <EasingDoubleKeyFrame EasingFunction="{StaticResource ExponentialEaseIn}"
                                                                              KeyTime="0:0:0.15"
                                                                              Value="74" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectBox" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="Visible" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OutterHintPanel" Storyboard.TargetProperty="(UIElement.IsHitTestVisible)">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="False" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <!--
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="InnerHintPanel" Storyboard.TargetProperty="(UIElement.IsHitTestVisible)">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="False" />
                                                        </ObjectAnimationUsingKeyFrames>
                                                    -->
                                                </Storyboard>
                                            </VisualTransition>
                                            <VisualTransition x:Name="OpenedToClosed"
                                                              From="Opened"
                                                              GeneratedDuration="0:0:0.15"
                                                              To="Closed">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SelectBox" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)">
                                                        <EasingDoubleKeyFrame EasingFunction="{StaticResource ExponentialEaseIn}"
                                                                              KeyTime="0:0:0.0"
                                                                              Value="0" />
                                                        <EasingDoubleKeyFrame EasingFunction="{StaticResource ExponentialEaseIn}"
                                                                              KeyTime="0:0:0.15"
                                                                              Value="-58" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Presenter" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)">
                                                        <EasingDoubleKeyFrame EasingFunction="{StaticResource ExponentialEaseIn}"
                                                                              KeyTime="0:0:0.0"
                                                                              Value="74" />
                                                        <EasingDoubleKeyFrame EasingFunction="{StaticResource ExponentialEaseIn}"
                                                                              KeyTime="0:0:0.15"
                                                                              Value="24" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectBox" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0.15" Value="Collapsed" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualTransition>
                                        </VisualStateGroup.Transitions>
                                        <VisualStateGroup.States>
                                            <VisualState x:Name="Closed" />
                                            <VisualState x:Name="Exposed">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0"
                                                                     Storyboard.TargetName="OutterHintPanel"
                                                                     Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                     To="1.0" />
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Opened">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0"
                                                                     Storyboard.TargetName="SelectBox"
                                                                     Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)"
                                                                     To="0" />
                                                    <DoubleAnimation Duration="0"
                                                                     Storyboard.TargetName="Presenter"
                                                                     Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)"
                                                                     To="74" />
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectBox" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OutterCover" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <DoubleAnimation Duration="0"
                                                                     Storyboard.TargetName="OutterHintPanel"
                                                                     Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                     To="0.0" />
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OutterHintPanel" Storyboard.TargetProperty="(UIElement.IsHitTestVisible)">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="False" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <!--
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="InnerHintPanel" Storyboard.TargetProperty="(UIElement.IsHitTestVisible)">
                                                        <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="False" />
                                                        </ObjectAnimationUsingKeyFrames>
                                                    -->
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup.States>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Grid x:Name="OutterCover"
                                      Width="74"
                                      HorizontalAlignment="Left"
                                      Background="Transparent"
                                      Visibility="Collapsed" />
                                <Grid HorizontalAlignment="Stretch">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid Grid.Column="0"
                                          HorizontalAlignment="Stretch"
                                          toolkitPrimitives:ClipToBounds.IsEnabled="True">
                                        <ContentPresenter x:Name="Presenter">
                                            <ContentPresenter.RenderTransform>
                                                <CompositeTransform TranslateX="24" />
                                            </ContentPresenter.RenderTransform>
                                        </ContentPresenter>
                                    </Grid>
                                    <!--
                                        <Rectangle x:Name="InnerHintPanel"
                                        Grid.Column="0"
                                        Width="24"
                                        Height="{TemplateBinding HintPanelHeight}"
                                        HorizontalAlignment="Left"
                                        Fill="Transparent"
                                        StrokeThickness="0">
                                        <Rectangle.RenderTransform>
                                        <CompositeTransform TranslateX="24" />
                                        </Rectangle.RenderTransform>
                                        </Rectangle>
                                    -->
                                    <ContentControl x:Name="InfoPresenter"
                                                    Grid.Column="1"
                                                    VerticalAlignment="Top"
                                                    Content="{TemplateBinding ContentInfo}"
                                                    ContentTemplate="{TemplateBinding ContentInfoTemplate}" />
                                </Grid>
                                <Rectangle x:Name="OutterHintPanel"
                                           Width="24"
                                           Height="{TemplateBinding HintPanelHeight}"
                                           HorizontalAlignment="Left"
                                           Fill="{TemplateBinding Background}"
                                           Opacity="0.0"
                                           StrokeThickness="0" />
                                <Grid HorizontalAlignment="Left" VerticalAlignment="Stretch">
                                    <CheckBox x:Name="SelectBox"
                                              Margin="24,0,0,0"
                                              VerticalAlignment="Center"
                                              IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent},
                                                                  Path=IsSelected,
                                                                  Mode=TwoWay}"
                                              Visibility="Collapsed">
                                        <CheckBox.RenderTransform>
                                            <CompositeTransform TranslateX="-58" />
                                        </CheckBox.RenderTransform>
                                    </CheckBox>
                                </Grid>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
        </Style>

        <Style TargetType="toolkit:MultiselectList">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{StaticResource PhoneForegroundBrush}" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="ItemContainerStyle" Value="{StaticResource MultiselectItemStyle}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="toolkit:MultiselectList">
                        <ScrollViewer x:Name="ScrollViewer"
                                      Background="{TemplateBinding Background}"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      BorderThickness="{TemplateBinding BorderThickness}"
                                      Foreground="{TemplateBinding Foreground}"
                                      Padding="{TemplateBinding Padding}">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel />
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
        </Style>


    </Application.Resources>

    <Application.ApplicationLifetimeObjects>
        <shell:PhoneApplicationService Activated="Application_Activated"
                                       Closing="Application_Closing"
                                       Deactivated="Application_Deactivated"
                                       Launching="Application_Launching" />
    </Application.ApplicationLifetimeObjects>
</Application>