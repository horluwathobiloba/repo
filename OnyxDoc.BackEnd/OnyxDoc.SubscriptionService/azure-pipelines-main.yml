trigger:
  branches:
    include:
    - main
    - dev
  paths:
    include:
    - OnyxDoc.SubscriptionService/

pool:
  vmImage: ubuntu-latest

variables:
- name: azureSubscription
  value: Flowmono Subscription
- name: dockerRegistryEndpoint
  value: flowmono
- name: dockerImageRegistry
  value: flowmono.azurecr.io
- name: dockerImageTag
  value: $[format('{0}-{1}', lower(variables['Build.SourceBranchName']), variables['Build.BuildId'])]
- name: dockerImageName
  value: "$(dockerImageRegistry)/subscription-service:$(dockerImageTag)"
- name: basePath
  value: OnyxDoc.SubscriptionService
- name: chartBasePath
  value: $(basePath)/helm/onyxdoc-subscription
- name: isDev
  value: $[eq(variables['Build.SourceBranch'], 'refs/heads/dev')]
- name: isMain
  value: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]
- name: DOCKER_BUILDKIT
  value: 1

resources:
  containers:
  - container: deps
    image: $(dockerImageRegistry)/subscription-service-deps
    endpoint: flowmono

stages:
- stage: CodeAnalysis
  displayName: Code Analysis
  condition: eq(variables.isDev, true)
  variables:
  - group: shared-keyvault-secrets
  pool:
    name: DedicatedPipelines
  jobs:
    - job: RunSonar
      displayName: Sonar Scan
      container: deps
      steps:
        - script: |
            set -e
            dotnet tool install --global dotnet-sonarscanner
            export PATH="$PATH:/home/AzDevOps_azpcontainer/.dotnet/tools"
            mkdir -p ~/.sonar
            cp -r /opt/sonarcache ~/.sonar/cache
            dotnet sonarscanner begin /k:"onyxdoc-subscription" /d:sonar.host.url="https://sonarqube.anelloh.com"  /d:sonar.login="$(sonarqube-pushToken)"
            dotnet build "API.csproj" -c Release
            dotnet sonarscanner end /d:sonar.login="$(sonarqube-pushToken)"
          workingDirectory: $(basePath)/src/API

- stage: Build
  displayName: Build
  dependsOn: []
  jobs:
    - job: Build
      steps:
        - task: Docker@1
          displayName: "Build Docker Image"
          inputs:
            containerregistrytype: Container Registry
            dockerRegistryEndpoint: $(dockerRegistryEndpoint)
            dockerFile: $(basePath)/src/API/Dockerfile
            buildContext: "."
            useDefaultContext: false
            imageName: $(dockerImageName)
            includeSourceTags: true

        - task: Docker@1
          displayName: "Push Docker Image"
          inputs:
            containerregistrytype: Container Registry
            dockerRegistryEndpoint: $(dockerRegistryEndpoint)
            command: "Push an image"
            imageName: "$(dockerImageName)"
            includeSourceTags: true

- stage: DeployDev
  displayName: Deploy to Dev
  dependsOn:
  - Build
  jobs:
  - deployment: DeployDev
    displayName: Deploy to Dev
    environment: dev
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self

          - task: AzureCLI@2
            displayName: Set KeyVault IDs for dev deployment
            inputs:
              azureSubscription: $(azureSubscription)
              scriptType: bash
              scriptLocation: inlineScript
              addSpnToEnvironment: true
              useGlobalConfig: true
              inlineScript: |
                subId=`az account show --query id --output tsv`
                tenantId=`az account show --query tenantId --output tsv`

                sed -e "s/subscriptionId: \"<set by pipeline>\"/subscriptionId: \"${subId}\"/g" -i'' $(chartBasePath)/values.yaml
                sed -e "s/tenantId: \"<set by pipeline>\"/tenantId: \"${tenantId}\"/g" -i'' $(chartBasePath)/values.yaml

          - task: HelmDeploy@0
            displayName: Deploy Dev
            inputs:
              connectionType: Azure Resource Manager
              azureSubscription: $(azureSubscription)
              azureResourceGroup: dev
              kubernetesCluster: dev
              namespace: default
              command: upgrade
              arguments: --install
              chartType: FilePath
              chartPath: $(chartBasePath)
              releaseName: onyxdoc-subscription
              overrideValues: image.tag=$(dockerImageTag)

- stage: DeployStaging
  displayName: Deploy to Staging
  condition: and(succeeded(), eq(variables.isMain, true))
  dependsOn:
  - DeployDev
  jobs:
  - deployment: DeployStaging
    displayName: Deploy to Staging
    environment: staging
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self

          - task: AzureCLI@2
            displayName: Set KeyVault IDs for staging deployment
            inputs:
              azureSubscription: $(azureSubscription)
              scriptType: bash
              scriptLocation: inlineScript
              addSpnToEnvironment: true
              useGlobalConfig: true
              inlineScript: |
                subId=`az account show --query id --output tsv`
                tenantId=`az account show --query tenantId --output tsv`

                sed -e "s/subscriptionId: \"<set by pipeline>\"/subscriptionId: \"${subId}\"/g" -i'' $(chartBasePath)/values-staging.yaml
                sed -e "s/tenantId: \"<set by pipeline>\"/tenantId: \"${tenantId}\"/g" -i'' $(chartBasePath)/values-staging.yaml

          - task: HelmDeploy@0
            displayName: Deploy Staging
            inputs:
              connectionType: Azure Resource Manager
              azureSubscription: $(azureSubscription)
              azureResourceGroup: staging
              kubernetesCluster: staging
              namespace: default
              command: upgrade
              arguments: --install
              chartType: FilePath
              chartPath: $(chartBasePath)
              releaseName: onyxdoc-subscription
              overrideValues: image.tag=$(dockerImageTag)
              valueFile: $(chartBasePath)/values-staging.yaml

- stage: DeployProd
  displayName: Deploy to Prod
  condition: and(succeeded(), eq(variables.isMain, true))
  dependsOn:
  - DeployStaging
  jobs:
  - deployment: DeployProd
    displayName: Deploy to Prod
    environment: prod
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self

          - task: AzureCLI@2
            displayName: Set KeyVault IDs for prod deployment
            inputs:
              azureSubscription: $(azureSubscription)
              scriptType: bash
              scriptLocation: inlineScript
              addSpnToEnvironment: true
              useGlobalConfig: true
              inlineScript: |
                subId=`az account show --query id --output tsv`
                tenantId=`az account show --query tenantId --output tsv`

                sed -e "s/subscriptionId: \"<set by pipeline>\"/subscriptionId: \"${subId}\"/g" -i'' $(chartBasePath)/values-prod.yaml
                sed -e "s/tenantId: \"<set by pipeline>\"/tenantId: \"${tenantId}\"/g" -i'' $(chartBasePath)/values-prod.yaml

          - task: HelmDeploy@0
            displayName: Deploy Prod
            inputs:
              connectionType: Azure Resource Manager
              azureSubscription: $(azureSubscription)
              azureResourceGroup: prod
              kubernetesCluster: prod
              namespace: default
              command: upgrade
              arguments: --install
              chartType: FilePath
              chartPath: $(chartBasePath)
              releaseName: onyxdoc-subscription
              overrideValues: image.tag=$(dockerImageTag)
              valueFile: $(chartBasePath)/values-prod.yaml
